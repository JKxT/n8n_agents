{
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "49f3e2b5e3163b12d523341d60f68cfb0e742d7f59e7f0e65a6829d9a06aeb46"
  },
  "nodes": [
    {
      "parameters": {
        "path": "",
        "options": {}
      },
      "id": "webhook_trigger",
      "name": "Incoming Chat Hook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [520, 420],
      "webhookId": "57c43fe5-3cf1-408a-a8dc-e71b9cd508da",
      "notes": "Launches when a chat message arrives",
      "notesInFlow": true
    },
    {
      "parameters": {
        "agent": {"__rl":true,"mode":"chatOpenAiFunctionsAgent"},
        "model": {"__rl":true,"mode":"openAi"},
        "memory": {"__rl":true,"mode":"windowBufferMemory"},
        "tools": {"__rl":true,"mode":"list"}
      },
      "id": "ai_agent",
      "name": "Conversational AI Agent",
      "type": "n8n-nodes-langchain.agent",
      "typeVersion": 1,
      "position": [750, 420]
    },
    {
      "parameters": {
        "context": "={{$json[\"chatInput\"]}}",
        "additionalFields": {"conversationId": "={{$json[\"sessionId\"]}}"}
      },
      "id": "chat_memory",
      "name": "Session Memory",
      "type": "n8n-nodes-langchain.memory",
      "typeVersion": 1,
      "position": [750, 660]
    },
    {
      "parameters": {
        "functionCode": "const tasks = []\nfor (const key in $json) {\n  if ($json[key] && $json[key].command) {\n    tasks.push({json: {cmd: $json[key].command}})\n  }\n}\nreturn tasks;"
      },
      "id": "command_extractor",
      "name": "Command Extractor",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1000, 420]
    },
    {
      "parameters": {
        "rules": [{"conditions":{"number":[{"operation":"equal","value":1}]},"id":"rule_getbases"}, {"conditions":{"number":[{"operation":"equal","value":2}]},"id":"rule_schema"}, {"conditions":{"number":[{"operation":"equal","value":3}]},"id":"rule_search"}, {"conditions":{"number":[{"operation":"equal","value":4}]},"id":"rule_code"}, {"conditions":{"number":[{"operation":"equal","value":5}]},"id":"rule_map"}] 
      },
      "id": "router",
      "name": "Command Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [1200, 420]
    },
    {
      "parameters": {
        "operation": "list",
        "application": "={{$json[\"application\"]}}"
      },
      "id": "airtable_bases",
      "name": "Fetch Airtable Bases",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 3,
      "position": [1400, 220],
      "credentials": {"airtableTokenApi": {"id": "Ud5WQqM05zuSWRZT","name":"Airtable Creds"}}
    },
    {
      "parameters": {
        "functionCode": "const outputs = []\nfor (const key in $json) {\n  if ($json[key].parameters) {\n    outputs.push({json: $json[key].parameters})\n  }\n}\nreturn outputs;"
      },
      "id": "param_extractor",
      "name": "Parameter Extractor",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1400, 420]
    },
    {
      "parameters": {
        "functionCode": "const results = []\nfor (const key in $json) {\n  if ($json[key].output) {\n    results.push({json: {response: $json[key].output}})\n  }\n}\nreturn results;"
      },
      "id": "response_builder",
      "name": "Response Builder",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1660, 820]
    },
    {
      "parameters": {
        "respondWith": "allItems",
        "responseBody": "={{$json[\"response\"]}}"
      },
      "id": "final_response",
      "name": "Final Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1880, 820]
    },
    {
      "parameters": {
        "operation": "list",
        "application": "={{$json[\"application\"]}}"
      },
      "id": "airtable_schema",
      "name": "Retrieve Table Schema",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 3,
      "position": [1600, 340],
      "credentials": {"airtableTokenApi": {"id": "Ud5WQqM05zuSWRZT","name":"Airtable Creds"}}
    },
    {
      "parameters": {
        "functionCode": "const outputs = []\nfor (const key in $json) {\n  if ($json[key].parameters) {\n    outputs.push({json: $json[key].parameters})\n  }\n}\nreturn outputs;"
      },
      "id": "param_extractor2",
      "name": "Schema Parameters Extractor",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1800, 340]
    },
    {
      "parameters": {
        "operation": "list",
        "application": "={{$json[\"application\"]}}",
        "table": "={{$json[\"table\"]}}",
        "additionalOptions": {"filterByFormula": "={{$json[\"filterByFormula\"]}}"}
      },
      "id": "airtable_search",
      "name": "Search Airtable Records",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 3,
      "position": [2000, 540],
      "credentials": {"airtableTokenApi": {"id": "Ud5WQqM05zuSWRZT","name":"Airtable Creds"}}
    },
    {
      "parameters": {
        "functionCode": "return [{json: {records: $json}}];"
      },
      "id": "search_results",
      "name": "Search Results Packager",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [2200, 540]
    },
    {
      "parameters": {
        "functionCode": "const outputs = []\nfor (const key in $json) {\n  if ($json[key].parameters) {\n    outputs.push({json: $json[key].parameters})\n  }\n}\nreturn outputs;"
      },
      "id": "param_extractor3",
      "name": "Search Parameter Extractor",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1800, 540]
    }
  ],
  "connections": {
    "Incoming Chat Hook": {"main":[[{"node":"Conversational AI Agent","type":"main","index":0}]]},
    "Conversational AI Agent": {"main":[[{"node":"Session Memory","type":"main","index":0},{"node":"Command Extractor","type":"main","index":0}]]},
    "Command Extractor": {"main":[[{"node":"Command Router","type":"main","index":0}]]},
    "Command Router": {"main":[[{"node":"Fetch Airtable Bases","type":"main","index":0}], [{"node":"Retrieve Table Schema","type":"main","index":0}], [{"node":"Search Parameter Extractor","type":"main","index":0}]]},
    "Fetch Airtable Bases": {"main":[[{"node":"Response Builder","type":"main","index":0}]]},
    "Retrieve Table Schema": {"main":[[{"node":"Schema Parameters Extractor","type":"main","index":0}]]},
    "Schema Parameters Extractor": {"main":[[{"node":"Response Builder","type":"main","index":0}]]},
    "Search Parameter Extractor": {"main":[[{"node":"Search Airtable Records","type":"main","index":0}]]},
    "Search Airtable Records": {"main":[[{"node":"Search Results Packager","type":"main","index":0}]]},
    "Search Results Packager": {"main":[[{"node":"Response Builder","type":"main","index":0}]]},
    "Response Builder": {"main":[[{"node":"Final Response","type":"main","index":0}]]}
  }
}